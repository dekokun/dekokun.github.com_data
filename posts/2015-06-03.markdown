---
title: TCP_NODELAYによるNagleアルゴリズム封じとTCP_CORKについて
author: @dekokun
date: 2015/06/03 8:17
tags: TCP
---

こんな理解でいいんですか。教えてください。あと、Nagleアルゴリズムについては後で書く

<blockquote class="twitter-tweet" lang="ja"><p lang="ja" dir="ltr">NagleアルゴリズムとTCP遅延ACKとTCP CORK覚えた。 / “nginxのパフォーマンスチューニング // Speaker Deck” <a href="http://t.co/HbOKeoNQc8">http://t.co/HbOKeoNQc8</a></p>&mdash; でこくん (@dekokun) <a href="https://twitter.com/dekokun/status/605820330729349121">2015, 6月 2</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<blockquote class="twitter-tweet" lang="ja"><p lang="ja" dir="ltr">さっきの資料にも載ってたけど、TCP_NODELAYとTCP_CORKの組み合わせ、コルクの抜くタイミングをいい感じにしながら、コルクを抜いてしまえば一気にフラッシュできますよってことだよね。コルクを抜くタイミングはどう制御されてる？</p>&mdash; でこくん (@dekokun) <a href="https://twitter.com/dekokun/status/605821565024870400">2015, 6月 2</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<blockquote class="twitter-tweet" lang="ja"><p lang="ja" dir="ltr">まぁ、そこはnginxがよしなにやってくれるわけなのかな。TCP_NODELAYとTCP_CORKの組み合わせは、パケット送信タイミングの最適化をカーネルに任せずにアプリケーション(今回はnginx)に任せるってことという理解でいいのかな。</p>&mdash; でこくん (@dekokun) <a href="https://twitter.com/dekokun/status/605823744972455939">2015, 6月 2</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
